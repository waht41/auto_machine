name: Electron Release
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:
          - os: macos-latest
            arch: x64
            artifact_name: macOS-package
            artifact_path: dist/*.dmg

    steps:
      - uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.cache/electron
          key: ${{ runner.os }}-${{ matrix.arch }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: pip install setuptools

      - name: Install Dependencies
        run: npm ci

      - name: Install WebView UI Dependencies
        run: cd webview-ui && npm ci && cd ..

      - name: Build Project
        run: npm run build

      - name: test
        run: pwd && ls

      - name: Electron Packaging
        run: |
          echo "Starting Electron packaging process..."
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Package.json content:"
          cat package.json | grep -E "version|name|build|electron"
          echo "Electron builder version:"
          npx electron-builder --version
          echo "Environment variables (sanitized):"
          env | grep -v -E "CSC_|SECRET|TOKEN|PASSWORD|KEY" | sort
          
          # 运行打包命令并捕获详细输出
          npm run package -- --x64 --debug || {
            echo "Packaging failed with exit code $?"
            echo "Last 100 lines of npm logs:"
            cat ~/.npm/_logs/$(ls -t ~/.npm/_logs | head -n 1) | tail -n 100
            exit 1
          }
          
          echo "Packaging completed. Checking dist directory:"
          ls -la dist/
        env:
          # macOS 签名配置
          CSC_LINK: ${{ secrets.MAC_CERT_BASE64 }}
          CSC_KEY_PASSWORD: ${{ secrets.CERT_PASSWORD }}
          DEBUG: electron-builder,electron-builder:*

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}
          if-no-files-found: error